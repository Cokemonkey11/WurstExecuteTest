package Spawn

import Abilities
import ClosureEvents
import LinkedList
import UnitAnimations
import WurstExecute


constant seq = new LinkedList<ExecuteExecutable>()
    ..add(new ExecuteLockTarget())
    ..add(new ExecuteLockCaster())
    ..add(new ExecuteAnimate(UnitAnimations.HeroBloodElf.spellChannel.idx))
    ..add(new ExecuteLightning(3.5, "AFOD"))
    ..add(new ExecuteFxTarget(Abilities.soulBurnbuff))
    ..add(new ExecuteWait(.5))
    ..add(new ExecuteFxCaster(Abilities.obsidianRegenAura))
    ..add(new ExecuteKnockup(1500.))
    ..add(new ExecuteWait(.65))
    ..add(new ExecuteForgetTargetVelocity())
    ..add(new ExecuteWait(.1))
    ..add(new ExecuteFxTarget(Abilities.darkPortalTarget))
    ..add(new ExecuteKnockArcToCaster(1400.))
    ..add(new ExecuteAnimate(UnitAnimations.HeroBloodElf.spell.idx))
    ..add(new ExecuteWait(.1))
    ..add(new ExecuteUnlockCaster())
    ..add(new ExecuteFxTarget(Abilities.bloodImpact))
    ..add(new ExecuteWait(1.))
    ..add(new ExecuteFxTarget(Abilities.bloodImpact))
    ..add(new ExecuteWait(1.))
    ..add(new ExecuteFxTarget(Abilities.bloodImpact))


function player.isSlotStatePlaying() returns bool
    return GetPlayerSlotState(this) == PLAYER_SLOT_STATE_PLAYING

function player.disableAbility(int which)
    SetPlayerAbilityAvailable(this, which, false)

init
    FogEnable(false)
    FogMaskEnable(false)

    for i = 0 to 23
        if players[i].isSlotStatePlaying()
            createUnit(players[i], i % 2 == 0 ? 'Hkal' : 'Orkn', vec2(0., 0.), angle(0.))

            players[i]
                ..disableAbility('ANhw')
                ..disableAbility('Arsw')
                ..disableAbility('AOls')
                ..disableAbility('Aamk')
                ..disableAbility('AHfs')
                ..disableAbility('AHdr')
                ..disableAbility('AHpx')

    EventListener.add(EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER) ->
        EventData.getTriggerUnit().issueImmediateOrder("stop")

        if EventData.getIssuedOrderId() == OrderId("smart")
            new Execute(EventData.getTriggerUnit(), EventData.getOrderTargetUnit())

    EventListener.add(EVENT_PLAYER_UNIT_SPELL_EFFECT) ->
        let target = EventData.getSpellTargetUnit()
        EventData.getTriggerUnit().issueImmediateOrder("stop")

        if EventData.getSpellAbilityId() == 'AHbn' or EventData.getSpellAbilityId() == 'AHhx'
            new Execute(
                EventData.getTriggerUnit(),
                target,
                seq
            )
